var Mono5x8_32_63 = {
  'width': 5,
  'height': 8,
  'first_char': 32,
  'count': 32,
  'widths': bytes("02445542523424255444444444224444"),
  'data':   bytes("00000000000000004040400040000000505000000000000050f050f05000000078a07028f0000000881020408800000010f0507010000000404000000000000008101010080000008040404080000000a040a000000000002020f020200000004040000000000000f0000000000000004000000000000000081020408000000070e8a8b870000000206020207000000060902040f0000000e0106010e00000009090f01010000000f080e010e00000006080e09060000000f010101010000000f090f090f0000000f090f01010000000400040000000000040004040000000001020402010000000f000f0000000000040201020400000006090600060000000")
}

var Mono5x8_64_95 = {
  'width': 5,
  'height': 8,
  'first_char': 64,
  'count': 32,
  'widths': bytes("54444444444445544444445555455254"),
  'data':   bytes("70a8f8f84000000060b0f09090000000f090f090f00000006090809060000000f0909090f0000000f080e080f0000000f080e080800000006080e090600000009090f090900000007020202070000000f01010906000000090a0e0a09000000080808080f000000050a8a8888800000088e8a8b8880000006090909060000000f090f08080000000609090f0f0000000e090e0a09000000070806010e0000000f020202020000000909090906000000088885050200000008888a8a85000000088502050880000008850202020000000701020407000000018101010180000008040201008000000c0404040c00000002050880000000000f000000000000000")
}

var Mono5x8_96_126 = {
  'width': 5,
  'height': 8,
  'first_char': 96,
  'count': 31,
  'widths': bytes("34444444444445544444445555453250"),
  'data':   bytes("402000000000000060b0f09090000000f090f090f00000006090809060000000f0909090f0000000f080e080f0000000f080e080800000006080e090600000009090f090900000007020202070000000f01010906000000090a0e0a09000000080808080f000000050a8a8888800000088e8a8b8880000006090909060000000f090f08080000000609090f0f0000000e090e0a09000000070806010e0000000f020202020000000909090906000000088885050200000008888a8a8500000008850205088000000885020202000000070102040700000000810081008000000202020202000000080408040800000002850000000000000")
}

var Tiny3x5_32_63 = {
  'width': 3,
  'height': 5,
  'first_char': 32,
  'count': 32,
  'widths': bytes("01111111111111111111111111111111"),
  'data':   bytes("00000000008080000000808000000080800000008080000000808000000080800000008080000000808000000080800000008080000000808000000080000000008000000000800000000080800000008080000000808000000080800000008080000000808000000080800000008080000000808000000080800000008080000000808000000080800000008080000000808000000080800000008080000000")
}

var Tiny3x5_64_95 = {
  'width': 3,
  'height': 5,
  'first_char': 64,
  'count': 32,
  'widths': bytes("11111111111111111111111111111111"),
  'data':   bytes("80800000008080000000808000000080800000008080000000808000000080800000008080000000808000000080800000008080000000808000000080800000008080000000808000000080800000008080000000808000000080800000008080000000808000000080800000008080000000808000000080800000008080000000808000000080800000008080000000808000000080800000008000000000")
}

var Tiny3x5_96_126 = {
  'width': 3,
  'height': 5,
  'first_char': 96,
  'count': 31,
  'widths': bytes("11111111111111111111111111111110"),
  'data':   bytes("8080000000800000000080800000008000000000808000000080800000008080000000808000000080800000008080000000808000000080800000008080000000800000000080000000008000000000808000000080800000008000000000808000000080800000008000000000800000000080000000008000000000800000000080800000008080000000808000000080800000008080000000")
}

class Matrix end

def font_width(font, idx)
    var b = font.widths[idx >> 1]
    return (idx & 1) == 0 ? ((b >> 4) & 0x0F) : (b & 0x0F)
end

def glyph_matrix(font, idx)
    var bytes_per_line = (font.width + 7) >> 3
    var off = idx * bytes_per_line * font.height
    var len = bytes_per_line * font.height
    return Matrix(font.data[off .. off + len - 1], bytes_per_line)
end

def get_font_slice(fonts, base, ch)
    var code = ord(ch)
    var start = (code / 32) * 32
    var end = start + 31
    var key = base .. "_" .. str(start) .. "_" .. str(end)
    return fonts.font_map[key]
end

#@solidify:fonts
var fonts = module("fonts")

fonts.font_map = {
  'Mono5x8_32_63': Mono5x8_32_63,
  'Mono5x8_64_95': Mono5x8_64_95,
  'Mono5x8_96_126': Mono5x8_96_126,
  'Tiny3x5_32_63': Tiny3x5_32_63,
  'Tiny3x5_64_95': Tiny3x5_64_95,
  'Tiny3x5_96_126': Tiny3x5_96_126
}

fonts.font_width = font_width
fonts.glyph_matrix = glyph_matrix
fonts.get_font_slice = get_font_slice

return fonts
