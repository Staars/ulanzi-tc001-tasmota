
var Mono5x8 = {
  'width': 5,
  'height': 8,
  'first_char': 32,
  'count': 95,
  'widths': bytes("024455425234242554444444442244445444444444444554444444555545525434444444444445544444445555453250"),
  'data': bytes("000000000000e800000000c000c00050f850f80048a8f8a8908810204088407050f80000c000000000000070888870000000a040a000002020f8200000c000000080808080000080000000081020408070c8f898700048f808004898a8480088a8a85000e02020f800e8a8a8900070a8a81000808080f800f8a8a8f800e0a0a0f80000a000000000b00000000020508800a0a0a0a000008850200040a8a8400070b8f0b07078a0e07800f8a8a8f8007088885000f88888f800f8a8a88800f8a0a0800070a8a81000f82020f8000088f88800908888f000f820708800f8080808007880608078f8407010f87088887000f8a0a0e0007898987800f8a0b0480048a8a890008080f88000f00808f000c0300830c0f0083008f0885020508880403840800098a8c800000000f888804020100888f800000020408040208080808000008040000078a0e07800f8a8a8f8007088885000f88888f800f8a8a88800f8a0a0800070a8a81000f82020f8000088f88800908888f000f820708800f8080808007880608078f8407010f87088887000f8a0a0e0007898987800f8a0b0480048a8a890008080f88000f00808f000c0300830c0f0083008f0885020508880403840800098a8c80000000050a80000f80000a8500000000040804080")
}

var Tiny3x5 = {
  'width': 3,
  'height': 5,
  'first_char': 32,
  'count': 95,
  'widths': bytes("011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110"),
  'data': bytes("000000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000800000800000800000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000c00000800000c00000800000c00000800000c00000c00000c00000c00000c00000c00000c00000c00000c00000800000800000800000c00000c00000800000c00000c00000800000800000800000800000800000c00000c00000c00000c00000c00000")
}

fonts.font_map = {
    'Mono5x8': Mono5x8,
    'Tiny3x5': Tiny3x5
}

# Helper: unpack nibble-packed widths
def font_width(font, idx)
    var b = font.widths[idx >> 1]
    return (idx & 1) == 0 ? ((b >> 4) & 0x0F) : (b & 0x0F)
end

# Helper: return glyph bytes (caller wraps in Matrix)
def glyph_bytes(font, idx)
    var bytes_per_line = (font.width + 7) >> 3
    var off = idx * bytes_per_line * font.height
    var len = bytes_per_line * font.height
    return font.data[off .. off + len - 1]
end

#@solidify:fonts
var fonts = module("fonts")
fonts.font_width = font_width
fonts.glyph_bytes = glyph_bytes

return fonts